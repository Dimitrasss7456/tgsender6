
#!/usr/bin/env python3

import sqlite3
import os
from datetime import datetime

def update_comment_logs_table():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã comment_logs"""
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã comment_logs...")
    
    db_path = "telegram_sender.db"
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã
        cursor.execute("PRAGMA table_info(comment_logs)")
        existing_columns = [row[1] for row in cursor.fetchall()]
        print(f"üìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã: {existing_columns}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if 'comment_message_id' not in existing_columns:
            cursor.execute("ALTER TABLE comment_logs ADD COLUMN comment_message_id INTEGER")
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü comment_message_id")
        else:
            print("üìã –°—Ç–æ–ª–±–µ—Ü comment_message_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –î–µ–ª–∞–µ–º campaign_id nullable –µ—Å–ª–∏ –æ–Ω –Ω–µ nullable
        cursor.execute("PRAGMA table_info(comment_logs)")
        columns_info = cursor.fetchall()
        
        campaign_id_nullable = True
        for col in columns_info:
            if col[1] == 'campaign_id' and col[3] == 1:  # not null
                campaign_id_nullable = False
                break
        
        if not campaign_id_nullable:
            print("üîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å nullable campaign_id...")
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
            cursor.execute("""
                CREATE TABLE comment_logs_new (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    campaign_id INTEGER,
                    account_id INTEGER,
                    chat_id VARCHAR,
                    message_id INTEGER,
                    comment TEXT,
                    status VARCHAR,
                    error_message TEXT,
                    comment_message_id INTEGER,
                    sent_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                    FOREIGN KEY (campaign_id) REFERENCES comment_campaigns (id),
                    FOREIGN KEY (account_id) REFERENCES accounts (id)
                )
            """)
            
            # –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
            cursor.execute("""
                INSERT INTO comment_logs_new 
                (id, campaign_id, account_id, chat_id, message_id, comment, status, error_message, sent_at)
                SELECT id, campaign_id, account_id, chat_id, message_id, comment, status, error_message, sent_at
                FROM comment_logs
            """)
            
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—É—é
            cursor.execute("DROP TABLE comment_logs")
            cursor.execute("ALTER TABLE comment_logs_new RENAME TO comment_logs")
            
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")
        
        conn.commit()
        print("üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã comment_logs –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã: {e}")
        conn.rollback()
    finally:
        conn.close()

if __name__ == "__main__":
    update_comment_logs_table()
